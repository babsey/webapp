import os

import djcelery
djcelery.setup_loader()

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Debug mode
DEBUG = True
TEMPLATE_DEBUG = DEBUG

# reCAPTCHA keys
# Obtain key pair at http://recaptcha.net/api/getkey
# 127.0.0.1:8000
RECAPTCHA_PUBLIC_KEY = '6LcJcgkTAAAAADVZ9REOiyomTET9bTSAWAhIbE1k'
RECAPTCHA_PRIVATE_KEY = '6LcJcgkTAAAAAGZxsuvFqmfHbgjzd2uuOh6YUMr8'

# Configure the broker settings:
# According to celery: http://www.celeryproject.org/tutorials/first-steps-with-celery/
# or django-celery: http://ask.github.com/django-celery/getting-started/first-steps-with-django.html
# Installation of broker : http://docs.celeryproject.org/en/latest/getting-started/broker-installation.html

BROKER_HOST = 'localhost'
BROKER_PORT = 5672
BROKER_USER = 'guest'
BROKER_PASSWORD = 'guest'
BROKER_VHOST = '/'

# Define the backend used to store task metadata and return values
CELERY_RESULT_BACKEND = "amqp"
CELERY_IMPORTS = ('network.tasks',)

ADMINS = (
    ('Yury V. Zaytsev', 'yury@shurup.com'),
    ('Sebastian Spreizer', 'spreizer@web.de'),
)

MANAGERS = ADMINS

DATABASE_ROUTERS = ['webapp.db_routers.AppRouter']

APP_ROUTERS = {
    'accounts':'default',
    'forum':'default',
    'news':'default',
    'network':'network',
    'result':'simulation',
    'djcelery':'simulation',
    'djkombu':'simulation',
    'reversion':'simulation',
}

# Database connection settings
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': '',
        'USER': '',
        'PASSWORD': '',
        # 'OPTIONS': {
        #    'ssl': {
        #        'ca': '/path/to/cacert.pem',
        #        },
        #    },
    },
    'network': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': '',
        'USER': '',
        'PASSWORD': '',
    },
    'simulation': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': '',
        'USER': '',
        'PASSWORD': '',
    }
}

# Absolute path to the directory that holds media
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# URL that handles the media served from MEDIA_ROOT
MEDIA_URL = '/media/'

# Absolute path to the directory static files should be collected to.
# Don't put anything in this directory yourself; store your static files
# in apps' "static/" subdirectories and in STATICFILES_DIRS.
# Example: "/home/media/media.lawrence.com/static/"
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

# URL prefix for static files.
# Example: "http://media.lawrence.com/static/"
STATIC_URL = '/static/'

STATICFILES_DIRS = ['static']

# URL prefix for admin static files -- CSS, JavaScript and images.
# Make sure to use a trailing slash.
# Examples: "http://foo.com/static/admin/", "/static/admin/".
ADMIN_MEDIA_PREFIX = '/static/admin/'

# Make this unique, and don't share it with anybody.
SECRET_KEY = ''

# List of locations of the template source files
TEMPLATE_DIRS = (
    os.path.join(BASE_DIR, 'templates'),
)
